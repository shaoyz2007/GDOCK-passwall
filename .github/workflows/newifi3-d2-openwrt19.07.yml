#=================================================
#   Description: Build newifi3 d2 固件 FROM LEAN'S openwrt
#   Author: shaojh
#=================================================

#=================================================
name: newifi3 d2 20200406
#=================================================

on: 
  release:
    types: [published]
#  push:
#    branches: 
#      - master
#  watch:
#    types: [started]

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler u-boot-tools python3.5
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
    - name: Clone source code
      run: |
        git clone -b dev-19.07 https://github.com/Lienol/openwrt openwrt
        
    #- name: Clone luci-app-vssr 
    #  run: |
    #    cd openwrt/package/lean 
    #    git clone https://github.com/jerrykuku/lua-maxminddb.git
    #    git clone https://github.com/jerrykuku/luci-app-vssr.git
        
    - name: feeds clean
      run: cd openwrt && ./scripts/feeds clean     
        
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        #=================================================
        #+++++++++++++++++++++++++++++++++++++++++++++++++
        #cp -f newifi3-auto.config ./openwrt/.config
        #chmod +x pi3.sh
        cd openwrt
        #../pi3.sh
        #++++++++++++++++++++++++++++++++++++++++++++++++
        #=================================================
        make defconfig
        
    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
    #  if: env.SSH_ACTIONS == 'true'
    
           
    - name: Download package
      run: |
        echo -e "$(nproc) thread build."
        cd openwrt && make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    
    
    
    
    
    
    - name: Build
      run: |
        cd openwrt
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
 
 ######把上面生成的.config文件拷贝到bin/targets/ramips/mt7621/my.config，从而在下载固件时，一起下载回来。
    - name: Copy .config  to  ./bin/targets/ramips/mt7621/my.config
      run: |
        cd openwrt
        cp  .config   ./bin/targets/ramips/mt7621/my.config  
   
   
    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        #=================================================
        name: newifi3 d2 20200406
        path: ./openwrt/bin
